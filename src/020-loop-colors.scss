/// The function to find the nearest accessible color
///
/// @param  {Color}  $name  Name of the module adding this dependency
/// @param  {Color}  $name  Version of the module adding this dependency
/// @param  {String} $name  Dependencies of this module
///
/// @example scss
/// 	color: a11ycolor( red, blue, 4.5 );
///
///
/// @group Main
///
/// @access public
@function a11ycolor( $toMakeA11y, $background, $ratio ) {

	// Get the current ratio
	$currentRatio: AU-color-contrast( $toMakeA11y, $background );

	// If the ratio is not accessible check lighter/darker variations...
	@if $currentRatio < $ratio {

		// Get the HSL values and pass them into the function
		$hue: hue( $toMakeA11y );
		$saturation: saturation( $toMakeA11y );
		$lightness: lightness( $toMakeA11y );

		@return a11ySpread( $hue, $saturation, $lightness, $background, $ratio );
	}
	// Else return the accessible colour
	@else {
		@return $toMakeA11y;
	}

}


/// The function to xxx
///
/// @param  {Color}  $hue         Hue
/// @param  {Color}  $saturation  Saturation
/// @param  {String} $lightness   Lightness
/// @param  {String} $background  Background
/// @param  {String} $ratio       Ration
/// @param  {String} $i           I
///
/// @example scss
/// 	a11ySpread( $hue, $saturation, $lightness, $background, $ratio );
///
///
/// @group Main
///
/// @access public
@function a11ySpread( $hue, $saturation, $lightness, $background, $ratio, $i: 0 ) {
	$i: $i + 1;

	// Increase the lightness by the iterable
	$lighter: $lightness + $i;
	$lighterNum: $lighter / ( $lighter * 0 + 1 );

	@if $lighterNum < 100 {
		$colorLighter: hsl( $hue, $saturation, $lighter );
		$currentLighter: AU-color-contrast( $colorLighter, $background );

		@if $currentLighter >= $ratio {
			@return $colorLighter;
		}
	}

	// Increase the darkness by iterable
	$darker: $lightness - $i;
	$darkerNum: $darker / ( $darker * 0 + 1 );

	@if $darkerNum > 0 {
		$colorDarker: hsl( $hue, $saturation, $darker );
		$currentDarker: AU-color-contrast( $colorDarker, $background );

		@if $currentDarker >= $ratio {
			@return $colorDarker;
		}
	}

	// No accessible colours found... try again..
	@return a11ySpread( $hue, $saturation, $lightness, $background, $ratio, $i );
}
